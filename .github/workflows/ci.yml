name: Test & Publish
on:
  push:
  pull_request:
    branches:
      # Branches from forks have the form 'user:branch-name' so we only run
      # this job on pull_request events for branches that look like fork
      # branches. Without this we would end up running this job twice for non
      # forked PRs, once for the push and then once for opening the PR.
    - '**:**'

jobs:
  #Run pytest and build package
  test_build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Install poetry
      uses: Gr1N/setup-poetry@v4

    - name: Cache poetry dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    
    - name: Install dependencies
      run: poetry install -E experiments

    - name: Run pytest
      run: poetry run pytest --doctest-modules --ignore=case_studies --ignore=experiments

    - name: Build package
      run: poetry build

    - name: Save build
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.sha }}-build
        path: dist/


  
  # # Publish to pypi on version change
  # publish:
  #   needs: test_build
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       # Make sure to fetch the last two commits
  #       # Needed forthe version bump and tag
  #       fetch-depth: 2
    
  #   - name: Install toml
  #     run: pip install toml

  #   - name: Check for version bump and tag
  #     id: version_check
  #     uses: salsify/action-detect-and-tag-new-version@v2
  #     with:
  #       create-tag: $ {{ github.ref == 'refs/heads/master' }} # only create new tag on master
  #       version-command: |
  #         python get_version.py

  #   - name: Download poetry build
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: ${{ github.sha }}-build

  #   - name: Install poetry
  #     uses: Gr1N/setup-poetry@v3

  #   - name: Publish
  #     # Only publish if there is a new tag
  #     if: ${{ steps.version_check.tag }}
  #     run: poetry publish -u {{ secrets.PYPI_USERNAME }} -p {{ $ secrets.PYPI_PASSWORD }}
